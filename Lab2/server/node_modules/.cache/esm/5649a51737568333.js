let Restaurants,Dishes,_,Promise;_375‍.x([["handle_request",()=>handle_request]]);_375‍.w("../../models/restaurant",[["default",["Restaurants"],function(v){Restaurants=v}]]);_375‍.w("../../models/dish",[["default",["Dishes"],function(v){Dishes=v}]]);_375‍.w("lodash",[["default",["_"],function(v){_=v}]]);_375‍.w("bluebird",[["default",["Promise"],function(v){Promise=v}]]);




const handle_request = (search_key, callback) => {
    return Dishes.aggregate([{
        $match: {
            name: {
                $regex: search_key,
                $options: 'i'
            }
        }
    }]).then(searchDishes => {
        return Promise.map(searchDishes, dish => {
            return Restaurants.findOne({
                dishes: dish._id
            })
        }).then(restaurants => {
            let results = _.chain(restaurants).compact().uniqBy('_id').value()
            callback(null, {
                search_results: results
            });
        })
    })

}


