let Restaurants,Dishes,_,mongoose,getRestaurantMenu;_375‍.x([["handle_request",()=>handle_request]]);_375‍.w("../../models/restaurant",[["default",["Restaurants"],function(v){Restaurants=v}]]);_375‍.w("../../models/dish",[["default",["Dishes"],function(v){Dishes=v}]]);_375‍.w("lodash",[["default",["_"],function(v){_=v}]]);_375‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_375‍.w("./getMenu",[["*",null,function(v){getRestaurantMenu=v}]]);





const handle_request = async (section, callback) => {
    if (!section.dishes || !section.dishes.length) {
        callback({
            message: "No dishes in section."
        }, null)
    }
    let restaurant = await Restaurants.findOne({
        _id: section.restaurant_id
    })
    let objectIdArray = section.dishes.map(s => mongoose.Types.ObjectId(s));
    restaurant.dishes = _.difference(restaurant.dishes, objectIdArray)

    restaurant = await restaurant.save()
    let dish = await Dishes.deleteMany({
        _id: section.dishes
    })
    let restaurantMenu = await getRestaurantMenu.handle_request(section.restaurant_id, null);
    callback(null,
        restaurantMenu
    )
}



