{"ast":null,"code":"import actionTypes from \"../constants/index\";\nimport axios from \"axios\";\n\nconst addDish = (payload, ownProps) => {\n  return dispatch => {\n    return axios.post(\"http://localhost:3001/dish/add\", payload).then(response => {\n      if (response.status === 200) {\n        dispatch({\n          type: actionTypes.SET_DISH,\n          payload: response.data\n        });\n        ownProps.history.push(\"/\".concat(payload.restaurant_id, \"/menu\"));\n      }\n    });\n  };\n};\n\nconst updateDish = (payload, ownProps) => {\n  return dispatch => {\n    return axios.post(\"http://localhost:3001/dish/update\", payload).then(response => {\n      if (response.status === 200) {\n        dispatch({\n          type: actionTypes.SET_DISH,\n          payload: response.data\n        });\n        ownProps.history.push(\"/\".concat(payload.restaurant_id, \"/menu\"));\n      }\n    });\n  };\n};\n\nconst deleteDish = (payload, ownProps) => {\n  return dispatch => {\n    return axios.post(\"http://localhost:3001/dish/delete/\", payload).then(response => {\n      if (response.status === 200) {\n        dispatch({\n          type: actionTypes.CLEAR_DISH,\n          payload: {}\n        });\n        ownProps.history.push(\"/\".concat(payload.restaurant_id, \"/menu\"));\n      }\n    });\n  };\n};\n\nconst getDish = payload => {\n  return dispatch => {\n    return axios.get(\"http://localhost:3001/dish/\".concat(payload.dish_id)).then(response => {\n      if (response.status === 200) {\n        dispatch({\n          type: actionTypes.SET_DISH,\n          payload: response.data\n        });\n      }\n    });\n  };\n};\n\nconst uploadDishImage = payload => {\n  return dispatch => {\n    return axios.post(\"http://localhost:3001/upload/image\", payload).then(response => {\n      if (response.status === 200) {\n        dispatch({\n          type: actionTypes.SET_DISH_IMAGE,\n          payload: response.data\n        });\n      }\n    });\n  };\n};\n\nexport { addDish, deleteDish, updateDish, getDish, uploadDishImage };","map":{"version":3,"sources":["/Users/admin/Downloads/Lab2-013708071/Lab2/client/src/js/actions/dishActions.js"],"names":["actionTypes","axios","addDish","payload","ownProps","dispatch","post","then","response","status","type","SET_DISH","data","history","push","restaurant_id","updateDish","deleteDish","CLEAR_DISH","getDish","get","dish_id","uploadDishImage","SET_DISH_IMAGE"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACnC,SAAOC,QAAQ,IAAI;AACf,WAAOJ,KAAK,CAACK,IAAN,mCAA6CH,OAA7C,EAAsDI,IAAtD,CAA2DC,QAAQ,IAAI;AAC1E,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEV,WAAW,CAACW,QADb;AAELR,UAAAA,OAAO,EAAEK,QAAQ,CAACI;AAFb,SAAD,CAAR;AAIAR,QAAAA,QAAQ,CAACS,OAAT,CAAiBC,IAAjB,YAA0BX,OAAO,CAACY,aAAlC;AACH;AACJ,KARM,CAAP;AASH,GAVD;AAWH,CAZD;;AAcA,MAAMC,UAAU,GAAG,CAACb,OAAD,EAAUC,QAAV,KAAuB;AACtC,SAAOC,QAAQ,IAAI;AACf,WAAOJ,KAAK,CAACK,IAAN,sCAAgDH,OAAhD,EAAyDI,IAAzD,CAA8DC,QAAQ,IAAI;AAC7E,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEV,WAAW,CAACW,QADb;AAELR,UAAAA,OAAO,EAAEK,QAAQ,CAACI;AAFb,SAAD,CAAR;AAIAR,QAAAA,QAAQ,CAACS,OAAT,CAAiBC,IAAjB,YAA0BX,OAAO,CAACY,aAAlC;AACH;AACJ,KARM,CAAP;AASH,GAVD;AAWH,CAZD;;AAcA,MAAME,UAAU,GAAG,CAACd,OAAD,EAAUC,QAAV,KAAuB;AACtC,SAAOC,QAAQ,IAAI;AACf,WAAOJ,KAAK,CAACK,IAAN,uCAAiDH,OAAjD,EAA0DI,IAA1D,CAA+DC,QAAQ,IAAI;AAC9E,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEV,WAAW,CAACkB,UADb;AAELf,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIAC,QAAAA,QAAQ,CAACS,OAAT,CAAiBC,IAAjB,YAA0BX,OAAO,CAACY,aAAlC;AACH;AACJ,KARM,CAAP;AASH,GAVD;AAWH,CAZD;;AAcA,MAAMI,OAAO,GAAGhB,OAAO,IAAI;AACvB,SAAOE,QAAQ,IAAI;AACf,WAAOJ,KAAK,CAACmB,GAAN,sCAAwCjB,OAAO,CAACkB,OAAhD,GAA2Dd,IAA3D,CAAgEC,QAAQ,IAAI;AAC/E,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEV,WAAW,CAACW,QADb;AAELR,UAAAA,OAAO,EAAEK,QAAQ,CAACI;AAFb,SAAD,CAAR;AAIH;AACJ,KAPM,CAAP;AAQH,GATD;AAUH,CAXD;;AAaA,MAAMU,eAAe,GAAGnB,OAAO,IAAI;AAC/B,SAAOE,QAAQ,IAAI;AACf,WAAOJ,KAAK,CAACK,IAAN,uCAAiDH,OAAjD,EAA0DI,IAA1D,CAA+DC,QAAQ,IAAI;AAC9E,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAAEV,WAAW,CAACuB,cADb;AAELpB,UAAAA,OAAO,EAAEK,QAAQ,CAACI;AAFb,SAAD,CAAR;AAIH;AACJ,KAPM,CAAP;AAQH,GATD;AAUH,CAXD;;AAaA,SACIV,OADJ,EAEIe,UAFJ,EAGID,UAHJ,EAIIG,OAJJ,EAKIG,eALJ","sourcesContent":["import actionTypes from \"../constants/index\";\nimport axios from \"axios\";\n\nconst addDish = (payload, ownProps) => {\n    return dispatch => {\n        return axios.post(`http://localhost:3001/dish/add`, payload).then(response => {\n            if (response.status === 200) {\n                dispatch({\n                    type: actionTypes.SET_DISH,\n                    payload: response.data\n                });\n                ownProps.history.push(`/${payload.restaurant_id}/menu`)\n            }\n        })\n    }\n}\n\nconst updateDish = (payload, ownProps) => {\n    return dispatch => {\n        return axios.post(`http://localhost:3001/dish/update`, payload).then(response => {\n            if (response.status === 200) {\n                dispatch({\n                    type: actionTypes.SET_DISH,\n                    payload: response.data\n                })\n                ownProps.history.push(`/${payload.restaurant_id}/menu`)\n            }\n        })\n    }\n}\n\nconst deleteDish = (payload, ownProps) => {\n    return dispatch => {\n        return axios.post(`http://localhost:3001/dish/delete/`, payload).then(response => {\n            if (response.status === 200) {\n                dispatch({\n                    type: actionTypes.CLEAR_DISH,\n                    payload: {}\n                })\n                ownProps.history.push(`/${payload.restaurant_id}/menu`)\n            }\n        })\n    }\n}\n\nconst getDish = payload => {\n    return dispatch => {\n        return axios.get(`http://localhost:3001/dish/${payload.dish_id}`).then(response => {\n            if (response.status === 200) {\n                dispatch({\n                    type: actionTypes.SET_DISH,\n                    payload: response.data\n                });\n            }\n        })\n    }\n}\n\nconst uploadDishImage = payload => {\n    return dispatch => {\n        return axios.post(`http://localhost:3001/upload/image`, payload).then(response => {\n            if (response.status === 200) {\n                dispatch({\n                    type: actionTypes.SET_DISH_IMAGE,\n                    payload: response.data\n                })\n            }\n        })\n    }\n}\n\nexport {\n    addDish,\n    deleteDish,\n    updateDish,\n    getDish,\n    uploadDishImage\n}"]},"metadata":{},"sourceType":"module"}