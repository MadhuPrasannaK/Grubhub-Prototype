{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = handleAction;\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\n\nfunction handleAction(type, reducers, defaultState) {\n  var typeValue = isFunction(type) ? type.toString() : type;\n  return function () {\n    var state = arguments.length <= 0 || arguments[0] === undefined ? defaultState : arguments[0];\n    var action = arguments[1]; // If action type does not match, return previous state\n\n    if (action.type !== typeValue) return state;\n    var handlerKey = action.error === true ? 'throw' : 'next'; // If function is passed instead of map, use as reducer\n\n    if (isFunction(reducers)) {\n      reducers.next = reducers.throw = reducers;\n    } // Otherwise, assume an action map was passed\n\n\n    var reducer = reducers[handlerKey];\n    return isFunction(reducer) ? reducer(state, action) : state;\n  };\n}","map":null,"metadata":{},"sourceType":"script"}