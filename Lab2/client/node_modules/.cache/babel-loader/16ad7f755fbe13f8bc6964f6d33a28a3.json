{"ast":null,"code":"import _defineProperty from \"/Users/admin/Desktop/Lab2-013708071/Lab2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/admin/Desktop/Lab2-013708071/Lab2/client/src/components/Order/OrderList.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport cellEditFactory, { Type } from \"react-bootstrap-table2-editor\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider, PaginationTotalStandalone, PaginationListStandalone } from \"react-bootstrap-table2-paginator\";\nimport { vendorActions, userActions } from \"../../js/actions/index\";\nimport { Link } from \"react-router-dom\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Navigationbar from \"../Navbar/Navbar\";\nimport PageListRenderer from \"../PageListRenderer\";\nconst paginationOption = {\n  custom: true\n};\n\nclass Order extends Component {\n  constructor(props) {\n    super(props);\n\n    this.orderIdFormatter = (cell, row) => {\n      let detailpage_link = \"/order/detail/\".concat(row._id);\n      return React.createElement(Link, {\n        to: detailpage_link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, cell);\n    };\n\n    this.afterSaveCell = (oldValue, newValue, row) => {\n      const payload = {\n        _id: row._id,\n        status: row.status\n      };\n      this.props.changeStatus(payload);\n    };\n\n    this.state = {\n      current_orders: [],\n      past_orders: [],\n      past_orders_columns: [{\n        dataField: \"_id\",\n        text: \"ID\",\n        formatter: this.orderIdFormatter\n      }, {\n        dataField: \"amount\",\n        text: \"Amount\"\n      }, {\n        dataField: \"status\",\n        text: \"Status\"\n      }],\n      current_order_columns: [{\n        dataField: \"_id\",\n        text: \"ID\",\n        formatter: this.orderIdFormatter\n      }, {\n        dataField: \"amount\",\n        text: \"Amount\"\n      }, {\n        dataField: \"status\",\n        text: \"Status\",\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            label: \"New\",\n            value: \"NEW\"\n          }, {\n            label: \"Preparing\",\n            value: \"PREPARING\"\n          }, {\n            label: \"Ready\",\n            value: \"READY\"\n          }, {\n            label: \"Delivered\",\n            value: \"DELIVERED\"\n          }, {\n            label: \"Cancelled\",\n            value: \"CANCELLED\"\n          }]\n        }\n      }],\n      //Facilitate re-ordering of columns\n      columnOrder: ['current_order_columns']\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user.account_type === \"Vendor\") {\n      this.props.getRestaurantOrders({\n        _id: this.props.restaurant._id\n      });\n    } else if (this.props.user.account_type === \"User\") {\n      this.props.getBuyerOrders({\n        _id: this.props.match.params._id\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.restaurant._id && nextProps.user.account_type === \"Vendor\") {\n      nextProps.getRestaurant({\n        user_id: this.props.match.params._id\n      });\n    }\n\n    if (nextProps.order.current_orders && nextProps.order.current_orders.length || nextProps.order.past_orders && nextProps.order.past_orders.length) {\n      this.setState({\n        current_orders: nextProps.order.current_orders,\n        past_orders: nextProps.order.past_orders\n      });\n    } else {\n      if (nextProps.user.type === \"Vendor\") {\n        nextProps.getRestaurantOrders({\n          _id: nextProps.restaurant._id\n        });\n      } else {\n        nextProps.getBuyerOrders({\n          _id: nextProps.match.params._id\n        });\n      }\n\n      this.setState({\n        current_orders: nextProps.order.current_orders,\n        past_orders: nextProps.order.past_orders\n      });\n    }\n  }\n\n  render() {\n    console.log(\"Previous Orders: \", this.state.past_orders);\n    const options = {\n      sizePerPage: 1,\n      pageListRenderer: props => PageListRenderer(_objectSpread({}, props)),\n      custom: true,\n      totalSize: this.state.past_orders.length\n    };\n    const pagination = paginationFactory(options);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.props.user.account_type === \"Vendor\" ? React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }) : React.createElement(Navigationbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"order_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Current Orders\")), this.props.user.account_type === \"Vendor\" ? React.createElement(\"div\", {\n      className: \"container shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(BootstrapTable, {\n      keyField: \"_id\",\n      data: this.state.current_orders,\n      columns: this.state.current_order_columns,\n      bordered: true,\n      totalSize: this.state.current_orders.length,\n      hover: true,\n      condensed: true,\n      striped: true,\n      cellEdit: cellEditFactory({\n        mode: \"click\",\n        blurToSave: true,\n        afterSaveCell: (oldValue, newValue, row) => {\n          this.afterSaveCell(oldValue, newValue, row);\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"container shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(BootstrapTable, {\n      keyField: \"_id\",\n      data: this.state.current_orders,\n      columns: this.state.current_order_columns,\n      bordered: true,\n      hover: true,\n      condensed: true,\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Previous Orders\")), React.createElement(\"div\", {\n      className: \"container shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(PaginationProvider, {\n      pagination: pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, ({\n      paginationProps,\n      paginationTableProps\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(PaginationTotalStandalone, Object.assign({}, paginationProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(BootstrapTable, Object.assign({\n      keyField: \"_id\",\n      data: this.state.past_orders,\n      columns: this.state.past_orders_columns,\n      bordered: true,\n      hover: true,\n      condensed: true,\n      striped: true\n    }, paginationTableProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(PaginationListStandalone, Object.assign({}, paginationProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    restaurant: state.restaurant,\n    order: state.order\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getRestaurantOrders: payload => dispatch(vendorActions.getRestaurantOrders(payload)),\n  changeStatus: payload => dispatch(vendorActions.changeStatus(payload)),\n  getBuyerOrders: payload => dispatch(vendorActions.getBuyerOrders(payload)),\n  getUser: payload => dispatch(userActions.getUser(payload)),\n  getRestaurant: payload => dispatch(vendorActions.getRestaurant(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);","map":{"version":3,"sources":["/Users/admin/Desktop/Lab2-013708071/Lab2/client/src/components/Order/OrderList.jsx"],"names":["React","Component","connect","cellEditFactory","Type","BootstrapTable","paginationFactory","PaginationProvider","PaginationTotalStandalone","PaginationListStandalone","vendorActions","userActions","Link","Sidebar","Navigationbar","PageListRenderer","paginationOption","custom","Order","constructor","props","orderIdFormatter","cell","row","detailpage_link","_id","afterSaveCell","oldValue","newValue","payload","status","changeStatus","state","current_orders","past_orders","past_orders_columns","dataField","text","formatter","current_order_columns","editor","type","SELECT","options","label","value","columnOrder","componentDidMount","user","account_type","getRestaurantOrders","restaurant","getBuyerOrders","match","params","componentWillReceiveProps","nextProps","getRestaurant","user_id","order","length","setState","render","console","log","sizePerPage","pageListRenderer","totalSize","pagination","mode","blurToSave","paginationProps","paginationTableProps","mapStateToProps","mapDispatchToProps","dispatch","getUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport cellEditFactory, { Type } from \"react-bootstrap-table2-editor\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n  PaginationTotalStandalone,\n  PaginationListStandalone\n} from \"react-bootstrap-table2-paginator\";\nimport { vendorActions, userActions } from \"../../js/actions/index\";\nimport { Link } from \"react-router-dom\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Navigationbar from \"../Navbar/Navbar\";\nimport PageListRenderer from \"../PageListRenderer\";\n\nconst paginationOption = {\n  custom: true\n};\n\nclass Order extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_orders: [],\n      past_orders: [],\n      past_orders_columns: [\n        {\n          dataField: \"_id\",\n          text: \"ID\",\n          formatter: this.orderIdFormatter\n        },\n        {\n          dataField: \"amount\",\n          text: \"Amount\"\n        },\n        {\n          dataField: \"status\",\n          text: \"Status\"\n        }\n      ],\n      current_order_columns: [\n        {\n          dataField: \"_id\",\n          text: \"ID\",\n          formatter: this.orderIdFormatter\n        },\n        {\n          dataField: \"amount\",\n          text: \"Amount\"\n        },\n        {\n          dataField: \"status\",\n          text: \"Status\",\n          editor: {\n            type: Type.SELECT,\n            options: [\n              {\n                label: \"New\",\n                value: \"NEW\"\n              },\n              {\n                label: \"Preparing\",\n                value: \"PREPARING\"\n              },\n              {\n                label: \"Ready\",\n                value: \"READY\"\n              },\n              {\n                label: \"Delivered\",\n                value: \"DELIVERED\"\n              },\n              {\n                label: \"Cancelled\",\n                value: \"CANCELLED\"\n              }\n            ]\n          }\n        }\n      ],\n      //Facilitate re-ordering of columns\n      columnOrder: ['current_order_columns']\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user.account_type === \"Vendor\") {\n      this.props.getRestaurantOrders({\n        _id: this.props.restaurant._id\n      });\n    } else if (this.props.user.account_type === \"User\") {\n      this.props.getBuyerOrders({\n        _id: this.props.match.params._id\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.restaurant._id && nextProps.user.account_type === \"Vendor\") {\n      nextProps.getRestaurant({\n        user_id: this.props.match.params._id\n      });\n    }\n    if (\n      (nextProps.order.current_orders &&\n        nextProps.order.current_orders.length) ||\n      (nextProps.order.past_orders && nextProps.order.past_orders.length)\n    ) {\n      this.setState({\n        current_orders: nextProps.order.current_orders,\n        past_orders: nextProps.order.past_orders\n      });\n    } else {\n      if (nextProps.user.type === \"Vendor\") {\n        nextProps.getRestaurantOrders({\n          _id: nextProps.restaurant._id\n        });\n      } else {\n        nextProps.getBuyerOrders({\n          _id: nextProps.match.params._id\n        });\n      }\n      this.setState({\n        current_orders: nextProps.order.current_orders,\n        past_orders: nextProps.order.past_orders\n      });\n    }\n  }\n  orderIdFormatter = (cell, row) => {\n    let detailpage_link = `/order/detail/${row._id}`;\n    return <Link to={detailpage_link}>{cell}</Link>;\n  };\n\n  afterSaveCell = (oldValue, newValue, row) => {\n    const payload = {\n      _id: row._id,\n      status: row.status\n    };\n    this.props.changeStatus(payload);\n  };\n\n  render() {\n    console.log(\"Previous Orders: \", this.state.past_orders);\n    const options = {\n      sizePerPage: 1,\n      pageListRenderer: props => PageListRenderer({ ...props }),\n      custom: true,\n      totalSize: this.state.past_orders.length\n    };\n\n    const pagination = paginationFactory(options);\n    return (\n      <div>\n        {this.props.user.account_type === \"Vendor\" ? (\n          <Sidebar />\n        ) : (\n          <Navigationbar />\n        )}\n        <div className=\"order_list\">\n          <div>\n            <h3>Current Orders</h3>\n          </div>\n          {this.props.user.account_type === \"Vendor\" ? (\n            <div className=\"container shadow\">\n                  <BootstrapTable\n                  keyField=\"_id\"\n                  data={this.state.current_orders}\n                  columns={this.state.current_order_columns}\n                  bordered={true}\n                  totalSize= {this.state.current_orders.length}\n                  hover\n                  condensed\n                  striped\n                  cellEdit={cellEditFactory({\n                    mode: \"click\",\n                    blurToSave: true,\n                    afterSaveCell: (oldValue, newValue, row) => {\n                      this.afterSaveCell(oldValue, newValue, row);\n                    }\n                  })}\n                  />\n            </div>\n              \n          ) : (\n          <div className=\"container shadow\">\n                <BootstrapTable\n                  keyField=\"_id\"\n                  data={this.state.current_orders}\n                  columns={this.state.current_order_columns}\n                  bordered={true}\n                  hover\n                  condensed\n                  striped                \n                />\n          </div>\n          )}\n\n          <div>\n            <h3>Previous Orders</h3>\n          </div>\n\n          <div className=\"container shadow\">\n          <PaginationProvider pagination={pagination}>\n            {({ paginationProps, paginationTableProps }) => (\n              <div>\n                <PaginationTotalStandalone {...paginationProps} />\n                <BootstrapTable\n                  keyField=\"_id\"\n                  data={this.state.past_orders}\n                  columns={this.state.past_orders_columns}\n                  bordered={true}\n                  hover\n                  condensed\n                  striped\n                  {...paginationTableProps}\n                />\n                <PaginationListStandalone {...paginationProps} />\n              </div>\n            )}\n          </PaginationProvider> \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    restaurant: state.restaurant,\n    order: state.order\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getRestaurantOrders: payload =>\n    dispatch(vendorActions.getRestaurantOrders(payload)),\n  changeStatus: payload => dispatch(vendorActions.changeStatus(payload)),\n  getBuyerOrders: payload => dispatch(vendorActions.getBuyerOrders(payload)),\n  getUser: payload => dispatch(userActions.getUser(payload)),\n  getRestaurant: payload => dispatch(vendorActions.getRestaurant(payload))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Order);"]},"metadata":{},"sourceType":"module"}