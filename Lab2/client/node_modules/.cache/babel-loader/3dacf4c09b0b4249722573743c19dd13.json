{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Lab2-013708071/Lab2/client/src/components/Navbar/Navbar.jsx\";\nimport React, { Component } from \"react\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport cookie from \"js-cookie\";\n\nclass Navigbar extends Component {\n  constructor() {\n    super();\n\n    this.handleLogout = e => {\n      e.preventDefault();\n      cookie.remove(\"token\");\n      localStorage.clear();\n      window.location.href = \"/\";\n    };\n\n    this.state = {\n      user: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      user: nextProps.user\n    });\n  }\n\n  render() {\n    const redirect = \"\\\\\".concat(this.state.user._id, \"\\\\search\");\n    return React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      className: \"fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: redirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://assets.grubhub.com/assets/img/grubhub/logo-full-primary.svg\",\n      width: \"125px\",\n      height: \"33px\",\n      className: \"d-inline-block align-top\",\n      alt: \"Main logo link to home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(Navbar.Toggle, {\n      \"aria-controls\": \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"ml-auto fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(NavDropdown, {\n      title: this.state.user.first_name,\n      id: \"basic-nav-dropdown\",\n      drop: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(NavDropdown.Item, {\n      href: \"/\".concat(this.state.user._id, \"/profile\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Profile\"), React.createElement(NavDropdown.Item, {\n      href: \"/\".concat(this.state.user._id, \"/cart\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Cart\"), React.createElement(NavDropdown.Item, {\n      href: \"/\".concat(this.state.user._id, \"/order\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"My Orders\"), React.createElement(NavDropdown.Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(NavDropdown.Item, {\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Log Out\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Navigbar);","map":{"version":3,"sources":["/Users/admin/Desktop/Lab2-013708071/Lab2/client/src/components/Navbar/Navbar.jsx"],"names":["React","Component","Navbar","Nav","NavDropdown","connect","cookie","Navigbar","constructor","handleLogout","e","preventDefault","remove","localStorage","clear","window","location","href","state","user","componentDidMount","setState","props","componentWillReceiveProps","nextProps","render","redirect","_id","first_name","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport cookie from \"js-cookie\";\n\nclass Navigbar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: \"\"\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      user: this.props.user\n    });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      user: nextProps.user\n    });\n  }\n\n  handleLogout = e => {\n    e.preventDefault();\n    cookie.remove(\"token\");\n    localStorage.clear();\n    window.location.href = \"/\";\n  };\n\n  render() {\n    const redirect = `\\\\${this.state.user._id}\\\\search`;\n    return (\n      <Navbar bg=\"light\" expand=\"lg\" className=\"fluid\">\n        <Navbar.Brand href={redirect}>\n          <img\n            src=\"https://assets.grubhub.com/assets/img/grubhub/logo-full-primary.svg\"\n            width=\"125px\"\n            height=\"33px\"\n            className=\"d-inline-block align-top\"\n            alt=\"Main logo link to home\"\n          />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto fluid\">\n            <NavDropdown\n              title={this.state.user.first_name}\n              id=\"basic-nav-dropdown\"\n              drop=\"left\"\n            >\n              <NavDropdown.Item href={`/${this.state.user._id}/profile`}>\n                Profile\n              </NavDropdown.Item>\n              <NavDropdown.Item href={`/${this.state.user._id}/cart`}>\n                Cart\n              </NavDropdown.Item>\n              <NavDropdown.Item href={`/${this.state.user._id}/order`}>\n                My Orders\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item onClick={this.handleLogout}>\n                Log Out\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\nexport default connect(mapStateToProps)(Navigbar);\n"]},"metadata":{},"sourceType":"module"}