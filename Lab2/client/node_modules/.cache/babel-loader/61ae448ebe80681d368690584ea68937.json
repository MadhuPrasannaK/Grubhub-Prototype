{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/Lab2-013708071/Lab2/client/src/components/Sidebar/Sidebar.jsx\";\nimport React, { Component } from \"react\";\nimport { Navbar, ListGroup } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"./style.css\";\nimport { NavLink } from \"react-router-dom\";\nimport cookie from \"js-cookie\";\nconst sidebarRoutes = {\n  vendor: [{\n    url: \"/profile\",\n    name: \"Account Details\"\n  }, {\n    url: \"/order\",\n    name: \"Orders\"\n  }, {\n    url: \"/menu\",\n    name: \"Menu\"\n  }]\n};\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogout = e => {\n      e.preventDefault();\n      cookie.remove(\"token\");\n      localStorage.clear();\n      window.location.href = \"/\";\n    };\n\n    this.state = {\n      visible: true,\n      currentSelection: 0,\n      userId: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.setState({\n        userId: this.props.user._id\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.state.userId) {\n      this.setState({\n        userId: nextProps.user._id\n      });\n    }\n  }\n\n  render() {\n    const userId = this.state.userId;\n    return React.createElement(\"div\", {\n      className: \"fixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"sidebar flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      variant: \"flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      variant: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: \"/\".concat(userId, \"/profile\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://assets.grubhub.com/assets/img/grubhub/logo-full-primary.svg\",\n      width: \"125px\",\n      height: \"33px\",\n      className: \"d-inline-block align-top\",\n      alt: \"Main logo link to home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), sidebarRoutes.vendor.map((route, selection) => {\n      return React.createElement(NavLink, {\n        key: \"/\".concat(userId).concat(route.url),\n        to: \"/\".concat(userId).concat(route.url),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        action: true,\n        variant: \"danger\",\n        onClick: () => {\n          this.setState({\n            currentSelection: selection\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, route.name));\n    }), React.createElement(ListGroup.Item, {\n      action: true,\n      variant: \"danger\",\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Logout\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Sidebar);","map":{"version":3,"sources":["/Users/admin/Downloads/Lab2-013708071/Lab2/client/src/components/Sidebar/Sidebar.jsx"],"names":["React","Component","Navbar","ListGroup","connect","NavLink","cookie","sidebarRoutes","vendor","url","name","Sidebar","constructor","props","handleLogout","e","preventDefault","remove","localStorage","clear","window","location","href","state","visible","currentSelection","userId","componentDidMount","user","setState","_id","componentWillReceiveProps","nextProps","render","map","route","selection","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Navbar, ListGroup } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport \"./style.css\";\nimport { NavLink } from \"react-router-dom\";\nimport cookie from \"js-cookie\";\n\nconst sidebarRoutes = {\n  vendor: [\n    {\n      url: \"/profile\",\n      name: \"Account Details\"\n    },\n    {\n      url: \"/order\",\n      name: \"Orders\"\n    },\n    {\n      url: \"/menu\",\n      name: \"Menu\"\n    }\n  ]\n};\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true,\n      currentSelection: 0,\n      userId: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.setState({\n        userId: this.props.user._id\n      });\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (!this.state.userId) {\n      this.setState({\n        userId: nextProps.user._id\n      });\n    }\n  }\n  handleLogout = e => {\n    e.preventDefault();\n    cookie.remove(\"token\");\n    localStorage.clear();\n    window.location.href = \"/\";\n  };\n  render() {\n    const { userId } = this.state;\n    return (\n      <div className=\"fixed\">\n        <nav className=\"sidebar flex-column\">\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item variant=\"danger\">\n              <Navbar.Brand href={`/${userId}/profile`}>\n                <img\n                  src=\"https://assets.grubhub.com/assets/img/grubhub/logo-full-primary.svg\"\n                  width=\"125px\"\n                  height=\"33px\"\n                  className=\"d-inline-block align-top\"\n                  alt=\"Main logo link to home\"\n                />\n              </Navbar.Brand>\n            </ListGroup.Item>\n            {sidebarRoutes.vendor.map((route, selection) => {\n              return (\n                <NavLink\n                  key={`/${userId}${route.url}`}\n                  to={`/${userId}${route.url}`}\n                >\n                  <ListGroup.Item\n                    action\n                    variant=\"danger\"\n                    onClick={() => {\n                      this.setState({ currentSelection: selection });\n                    }}\n                  >\n                    {route.name}\n                  </ListGroup.Item>\n                </NavLink>\n              );\n            })}\n            <ListGroup.Item action variant=\"danger\" onClick={this.handleLogout}>\n              Logout\n            </ListGroup.Item>\n          </ListGroup>\n        </nav>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(Sidebar);\n"]},"metadata":{},"sourceType":"module"}