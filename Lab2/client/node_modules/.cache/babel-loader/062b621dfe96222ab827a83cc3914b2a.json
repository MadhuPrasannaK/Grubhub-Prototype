{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/Lab2-013708071/Lab2/client/src/components/Restaurant/Restaurant.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { buyerActions } from \"../../js/actions/index\";\nimport { Container, Row, Card, Form, Col } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport Navigbar from \"../Navbar/Navbar\";\nimport \"./style.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nclass Restaurant extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuantity = e => {\n      if (e.target.value < 0 || !e.target.value) {\n        e.target.value = 0;\n      } else if (e.target.value > 10) {\n        e.target.value = 10;\n      }\n\n      const cart = this.state.cart;\n      cart[e.target.id] = e.target.value;\n      this.setState({\n        cart\n      });\n    };\n\n    this.handleAddToCart = e => {\n      e.preventDefault();\n\n      const dishes = _.chain(this.state.current_restaurant.menu).map(\"dishes\").concat().flatten().value();\n\n      if (dishes && dishes.length) {\n        const cart = dishes.map(dish => {\n          if (this.state.cart[dish._id] && this.state.cart[dish._id] !== 0) {\n            return {\n              _id: dish._id,\n              name: dish.name,\n              quantity: this.state.cart[dish._id],\n              price: dish.price ? dish.price * this.state.cart[dish._id] : 0\n            }; //NEW\n          } else if (parseInt(this.state.cart[dish._id]) === 0) {\n            return {\n              _id: dish._id,\n              name: dish.name,\n              quantity: this.state.cart[dish._id],\n              price: dish.price ? dish.price * this.state.cart[dish._id] : 0\n            };\n          }\n        });\n\n        if (_.compact(cart) && _.compact(cart).length) {\n          console.log(_.chain(cart).compact().filter(dish => dish.price !== 0).value());\n          this.props.addToCart({\n            cart: _.chain(cart).compact().filter(\"price\").value()\n          });\n          toast.success(\"Added to cart!\");\n        }\n      }\n    };\n\n    this.state = {\n      current_restaurant: {\n        _id: \"\",\n        name: \"\",\n        cuisine: \"\",\n        address: \"\",\n        zipcode: \"\",\n        image: \"\",\n        menu: \"\"\n      },\n      cart: {}\n    };\n  }\n\n  componentDidMount() {\n    this.props.getRestaurantDetails({\n      restaurant_id: this.props.match.params.restaurant_id\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.current_restaurant) {\n      this.setState({\n        current_restaurant: nextProps.current_restaurant\n      });\n    }\n  }\n\n  render() {\n    const current_restaurant = this.state.current_restaurant;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Navigbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group row restaurant_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: current_restaurant.image,\n      className: \"img-thumbnail\",\n      alt: \"Oops, restaurant has no image...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"restaurant_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, current_restaurant.name), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, current_restaurant.address))), React.createElement(\"div\", {\n      className: \"restaurant-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Menu\"), current_restaurant.menu && current_restaurant.menu.length ? current_restaurant.menu.map(eachSection => {\n      return React.createElement(\"div\", {\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, eachSection.section), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, eachSection.dishes.map(dish => {\n        return React.createElement(\"div\", {\n          className: \"m-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(Card, {\n          style: {\n            width: \"14rem\",\n            height: \"20rem\"\n          },\n          key: dish._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(Card.Img, {\n          variant: \"top\",\n          src: dish.image,\n          width: \"60px\",\n          height: \"90px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, dish.name), React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, dish.description), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"$\", dish.price), React.createElement(Form.Group, {\n          as: Row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, React.createElement(Form.Label, {\n          column: true,\n          sm: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Quantity\"), React.createElement(Col, {\n          sm: \"6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, React.createElement(Form.Control, {\n          type: \"number\",\n          placeholder: \"\",\n          min: \"0\",\n          max: \"10\",\n          id: dish._id,\n          onChange: this.handleQuantity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        })))))));\n      })))));\n    }) : null), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-danger m-3 float-right\",\n      onClick: this.handleAddToCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Add Selected Dishes to Cart\")), React.createElement(ToastContainer, {\n      autoClose: 2000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  current_restaurant: state.buyer.current_restaurant\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRestaurantDetails: payload => dispatch(buyerActions.getRestaurantDetails(payload)),\n  addToCart: payload => dispatch(buyerActions.addToCart(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Restaurant);","map":{"version":3,"sources":["/Users/admin/Downloads/Lab2-013708071/Lab2/client/src/components/Restaurant/Restaurant.jsx"],"names":["React","Component","connect","buyerActions","Container","Row","Card","Form","Col","_","Navigbar","ToastContainer","toast","Restaurant","constructor","props","handleQuantity","e","target","value","cart","state","id","setState","handleAddToCart","preventDefault","dishes","chain","current_restaurant","menu","map","concat","flatten","length","dish","_id","name","quantity","price","parseInt","compact","console","log","filter","addToCart","success","cuisine","address","zipcode","image","componentDidMount","getRestaurantDetails","restaurant_id","match","params","componentWillReceiveProps","nextProps","render","eachSection","section","width","height","description","mapStateToProps","buyer","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { buyerActions } from \"../../js/actions/index\";\nimport { Container, Row, Card, Form, Col } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport Navigbar from \"../Navbar/Navbar\";\nimport \"./style.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nclass Restaurant extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_restaurant: {\n        _id: \"\",\n        name: \"\",\n        cuisine: \"\",\n        address: \"\",\n        zipcode: \"\",\n        image: \"\",\n        menu: \"\"\n      },\n      cart: {}\n    };\n  }\n  componentDidMount() {\n    this.props.getRestaurantDetails({\n      restaurant_id: this.props.match.params.restaurant_id\n    });\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.current_restaurant) {\n      this.setState({\n        current_restaurant: nextProps.current_restaurant\n      });\n    }\n  }\n  handleQuantity = e => {\n    if (e.target.value < 0 || !e.target.value) {\n      e.target.value = 0;\n    } else if (e.target.value > 10) {\n      e.target.value = 10;\n    }\n    const cart = this.state.cart;\n    cart[e.target.id] = e.target.value;\n    this.setState({\n      cart\n    });\n  };\n  handleAddToCart = e => {\n    e.preventDefault();\n    const dishes = _.chain(this.state.current_restaurant.menu)\n      .map(\"dishes\")\n      .concat()\n      .flatten()\n      .value();\n    if (dishes && dishes.length) {\n      const cart = dishes.map(dish => {\n        if (this.state.cart[dish._id] && this.state.cart[dish._id] !== 0) {\n          return {\n            _id: dish._id,\n            name: dish.name,\n            quantity: this.state.cart[dish._id],\n            price: dish.price ? dish.price * this.state.cart[dish._id] : 0\n          };\n          //NEW\n        } else if (parseInt(this.state.cart[dish._id]) === 0) {\n          return {\n            _id: dish._id,\n            name: dish.name,\n            quantity: this.state.cart[dish._id],\n            price: dish.price ? dish.price * this.state.cart[dish._id] : 0\n          };\n        }\n      });\n      if (_.compact(cart) && _.compact(cart).length) {\n        console.log(\n          _.chain(cart)\n            .compact()\n            .filter(dish => dish.price !== 0)\n            .value()\n        );\n        this.props.addToCart({\n          cart: _.chain(cart)\n            .compact()\n            .filter(\"price\")\n            .value()\n        });\n        toast.success(\"Added to cart!\");\n      }\n    }\n  };\n  render() {\n    const { current_restaurant } = this.state;\n    return (\n      <div>\n        <Navigbar />\n        <div className=\"form-group row restaurant_title\">\n          <div className=\"image-container\">\n            <img\n              src={current_restaurant.image}\n              className=\"img-thumbnail\"\n              alt=\"Oops, restaurant has no image...\"\n            />\n          </div>\n          <div className=\"restaurant_name\">\n            <h1>{current_restaurant.name}</h1>\n            <h5>{current_restaurant.address}</h5>\n          </div>\n        </div>\n        <div className=\"restaurant-detail\">\n          <div className=\"container\">\n            <h3 className=\"menu\">Menu</h3>\n            {current_restaurant.menu && current_restaurant.menu.length\n              ? current_restaurant.menu.map(eachSection => {\n                  return (\n                    <div className=\"section\">\n                      <h4>{eachSection.section}</h4>\n                      <div>\n                        <Container>\n                          <Row>\n                            {eachSection.dishes.map(dish => {\n                              return (\n                                <div className=\"m-2\">\n                                  <Card\n                                    style={{ width: \"14rem\", height: \"20rem\" }}\n                                    key={dish._id}\n                                  >\n                                    <Card.Img\n                                      variant=\"top\"\n                                      src={dish.image}\n                                      width=\"60px\"\n                                      height=\"90px\"\n                                    />\n                                    <Card.Body>\n                                      <Card.Title>{dish.name}</Card.Title>\n                                      <Card.Text>\n                                        <label>{dish.description}</label>\n                                        <br></br>\n                                        <label>${dish.price}</label>\n                                        <Form.Group as={Row}>\n                                          <Form.Label column sm=\"6\">\n                                            Quantity\n                                          </Form.Label>\n                                          <Col sm=\"6\">\n                                            <Form.Control\n                                              type=\"number\"\n                                              placeholder=\"\"\n                                              min=\"0\"\n                                              max=\"10\"\n                                              id={dish._id}\n                                              onChange={this.handleQuantity}\n                                            />\n                                          </Col>\n                                        </Form.Group>\n                                      </Card.Text>\n                                    </Card.Body>\n                                  </Card>\n                                </div>\n                              );\n                            })}\n                          </Row>\n                        </Container>\n                      </div>\n                    </div>\n                  );\n                })\n              : null}\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-danger m-3 float-right\"\n            onClick={this.handleAddToCart}\n          >\n            Add Selected Dishes to Cart\n          </button>\n        </div>\n        <ToastContainer autoClose={2000} />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  current_restaurant: state.buyer.current_restaurant\n});\nconst mapDispatchToProps = dispatch => ({\n  getRestaurantDetails: payload =>\n    dispatch(buyerActions.getRestaurantDetails(payload)),\n  addToCart: payload => dispatch(buyerActions.addToCart(payload))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Restaurant);\n"]},"metadata":{},"sourceType":"module"}