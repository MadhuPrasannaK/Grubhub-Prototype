{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/Lab2-013708071/Lab2/client/src/components/Order/OrderList.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport cellEditFactory, { Type } from \"react-bootstrap-table2-editor\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider, PaginationTotalStandalone, PaginationListsStandalone } from \"react-bootstrap-table2-paginator\";\nimport { vendorActions, userActions } from \"../../js/actions/index\";\nimport { Link } from \"react-router-dom\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Navigationbar from \"../Navbar/Navbar\";\n\nclass Order extends Component {\n  constructor(props) {\n    super(props);\n\n    this.orderIdFormatter = (cell, row) => {\n      let detailpage_link = \"/order/detail/\".concat(row._id);\n      return React.createElement(Link, {\n        to: detailpage_link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, cell);\n    };\n\n    this.afterSaveCell = (oldValue, newValue, row) => {\n      const payload = {\n        _id: row._id,\n        status: row.status\n      };\n      this.props.changeStatus(payload);\n    };\n\n    this.state = {\n      current_orders: [],\n      past_orders: [],\n      past_orders_columns: [{\n        dataField: \"_id\",\n        text: \"ID\",\n        formatter: this.orderIdFormatter\n      }, {\n        dataField: \"amount\",\n        text: \"Amount\"\n      }, {\n        dataField: \"status\",\n        text: \"Status\"\n      }],\n      current_order_columns: [{\n        dataField: \"_id\",\n        text: \"ID\",\n        formatter: this.orderIdFormatter\n      }, {\n        dataField: \"amount\",\n        text: \"Amount\"\n      }, {\n        dataField: \"status\",\n        text: \"Status\",\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            label: \"New\",\n            value: \"NEW\"\n          }, {\n            label: \"Preparing\",\n            value: \"PREPARING\"\n          }, {\n            label: \"Ready\",\n            value: \"READY\"\n          }, {\n            label: \"Delivered\",\n            value: \"DELIVERED\"\n          }, {\n            label: \"Cancelled\",\n            value: \"CANCELLED\"\n          }]\n        }\n      }]\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user.account_type === \"Vendor\") {\n      this.props.getRestaurantOrders({\n        _id: this.props.restaurant._id\n      });\n    } else if (this.props.user.account_type === \"User\") {\n      this.props.getBuyerOrders({\n        _id: this.props.match.params._id\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.restaurant._id && nextProps.user.account_type === \"Vendor\") {\n      nextProps.getRestaurant({\n        user_id: this.props.match.params._id\n      });\n    }\n\n    if (nextProps.order.current_orders && nextProps.order.current_orders.length || nextProps.order.past_orders && nextProps.order.past_orders.length) {\n      this.setState({\n        current_orders: nextProps.order.current_orders,\n        past_orders: nextProps.order.past_orders\n      });\n    } else {\n      if (nextProps.user.type === \"Vendor\") {\n        nextProps.getRestaurantOrders({\n          _id: nextProps.restaurant._id\n        });\n      } else {\n        nextProps.getBuyerOrders({\n          _id: nextProps.match.params._id\n        });\n      }\n\n      this.setState({\n        current_orders: nextProps.order.current_orders,\n        past_orders: nextProps.order.past_orders\n      });\n    }\n  }\n\n  render() {\n    console.log(\"Restuarant ID: \", this.props.restaurant._id);\n    console.log(\"Order ID: \", this.props.match.params._id);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.props.user.account_type === \"Vendor\" ? React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }) : React.createElement(Navigationbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"order_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Current Orders\")), this.props.user.account_type === \"Vendor\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(BootstrapTable, {\n      keyField: \"_id\",\n      data: this.state.current_orders,\n      columns: this.state.current_order_columns,\n      bordered: true,\n      hover: true,\n      condensed: true,\n      striped: true,\n      cellEdit: cellEditFactory({\n        mode: \"click\",\n        blurToSave: true,\n        afterSaveCell: (oldValue, newValue, row) => {\n          this.afterSaveCell(oldValue, newValue, row);\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(BootstrapTable, {\n      keyField: \"_id\",\n      data: this.state.current_orders,\n      columns: this.state.current_order_columns,\n      bordered: true,\n      hover: true,\n      condensed: true,\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Previous Orders\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(BootstrapTable, {\n      keyField: \"_id\",\n      data: this.state.past_orders,\n      columns: this.state.past_orders_columns,\n      bordered: true,\n      hover: true,\n      condensed: true,\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    restaurant: state.restaurant,\n    order: state.order\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getRestaurantOrders: payload => dispatch(vendorActions.getRestaurantOrders(payload)),\n  changeStatus: payload => dispatch(vendorActions.changeStatus(payload)),\n  getBuyerOrders: payload => dispatch(vendorActions.getBuyerOrders(payload)),\n  getUser: payload => dispatch(userActions.getUser(payload)),\n  getRestaurant: payload => dispatch(vendorActions.getRestaurant(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);","map":{"version":3,"sources":["/Users/admin/Desktop/Lab2-013708071/Lab2/client/src/components/Order/OrderList.jsx"],"names":["React","Component","connect","cellEditFactory","Type","BootstrapTable","paginationFactory","PaginationProvider","PaginationTotalStandalone","PaginationListsStandalone","vendorActions","userActions","Link","Sidebar","Navigationbar","Order","constructor","props","orderIdFormatter","cell","row","detailpage_link","_id","afterSaveCell","oldValue","newValue","payload","status","changeStatus","state","current_orders","past_orders","past_orders_columns","dataField","text","formatter","current_order_columns","editor","type","SELECT","options","label","value","componentDidMount","user","account_type","getRestaurantOrders","restaurant","getBuyerOrders","match","params","componentWillReceiveProps","nextProps","getRestaurant","user_id","order","length","setState","render","console","log","mode","blurToSave","mapStateToProps","mapDispatchToProps","dispatch","getUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport cellEditFactory, { Type } from \"react-bootstrap-table2-editor\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, {\n  PaginationProvider,\n  PaginationTotalStandalone,\n  PaginationListsStandalone\n} from \"react-bootstrap-table2-paginator\";\nimport { vendorActions, userActions } from \"../../js/actions/index\";\nimport { Link } from \"react-router-dom\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Navigationbar from \"../Navbar/Navbar\";\nclass Order extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current_orders: [],\n      past_orders: [],\n      past_orders_columns: [\n        {\n          dataField: \"_id\",\n          text: \"ID\",\n          formatter: this.orderIdFormatter\n        },\n        {\n          dataField: \"amount\",\n          text: \"Amount\"\n        },\n        {\n          dataField: \"status\",\n          text: \"Status\"\n        }\n      ],\n      current_order_columns: [\n        {\n          dataField: \"_id\",\n          text: \"ID\",\n          formatter: this.orderIdFormatter\n        },\n        {\n          dataField: \"amount\",\n          text: \"Amount\"\n        },\n        {\n          dataField: \"status\",\n          text: \"Status\",\n          editor: {\n            type: Type.SELECT,\n            options: [\n              {\n                label: \"New\",\n                value: \"NEW\"\n              },\n              {\n                label: \"Preparing\",\n                value: \"PREPARING\"\n              },\n              {\n                label: \"Ready\",\n                value: \"READY\"\n              },\n              {\n                label: \"Delivered\",\n                value: \"DELIVERED\"\n              },\n              {\n                label: \"Cancelled\",\n                value: \"CANCELLED\"\n              }\n            ]\n          }\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.user.account_type === \"Vendor\") {\n      this.props.getRestaurantOrders({\n        _id: this.props.restaurant._id\n      });\n    } else if (this.props.user.account_type === \"User\") {\n      this.props.getBuyerOrders({\n        _id: this.props.match.params._id\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.restaurant._id && nextProps.user.account_type === \"Vendor\") {\n      nextProps.getRestaurant({\n        user_id: this.props.match.params._id\n      });\n    }\n    if (\n      (nextProps.order.current_orders &&\n        nextProps.order.current_orders.length) ||\n      (nextProps.order.past_orders && nextProps.order.past_orders.length)\n    ) {\n      this.setState({\n        current_orders: nextProps.order.current_orders,\n        past_orders: nextProps.order.past_orders\n      });\n    } else {\n      if (nextProps.user.type === \"Vendor\") {\n        nextProps.getRestaurantOrders({\n          _id: nextProps.restaurant._id\n        });\n      } else {\n        nextProps.getBuyerOrders({\n          _id: nextProps.match.params._id\n        });\n      }\n      this.setState({\n        current_orders: nextProps.order.current_orders,\n        past_orders: nextProps.order.past_orders\n      });\n    }\n  }\n  orderIdFormatter = (cell, row) => {\n    let detailpage_link = `/order/detail/${row._id}`;\n    return <Link to={detailpage_link}>{cell}</Link>;\n  };\n\n  afterSaveCell = (oldValue, newValue, row) => {\n    const payload = {\n      _id: row._id,\n      status: row.status\n    };\n    this.props.changeStatus(payload);\n  };\n\n  render() {\n    console.log(\"Restuarant ID: \", this.props.restaurant._id);\n    console.log(\"Order ID: \", this.props.match.params._id);\n\n    return (\n      <div>\n        {this.props.user.account_type === \"Vendor\" ? (\n          <Sidebar />\n        ) : (\n          <Navigationbar />\n        )}\n        <div className=\"order_list\">\n          <div>\n            <h3>Current Orders</h3>\n          </div>\n          {this.props.user.account_type === \"Vendor\" ? (\n            <div>\n              <BootstrapTable\n                keyField=\"_id\"\n                data={this.state.current_orders}\n                columns={this.state.current_order_columns}\n                bordered={true}\n                hover\n                condensed\n                striped\n                cellEdit={cellEditFactory({\n                  mode: \"click\",\n                  blurToSave: true,\n                  afterSaveCell: (oldValue, newValue, row) => {\n                    this.afterSaveCell(oldValue, newValue, row);\n                  }\n                })}\n              />\n            </div>\n          ) : (\n            <div>\n              <BootstrapTable\n                keyField=\"_id\"\n                data={this.state.current_orders}\n                columns={this.state.current_order_columns}\n                bordered={true}\n                hover\n                condensed\n                striped\n              />\n            </div>\n          )}\n\n          <div>\n            <h3>Previous Orders</h3>\n          </div>\n          <div>\n            <BootstrapTable\n              keyField=\"_id\"\n              data={this.state.past_orders}\n              columns={this.state.past_orders_columns}\n              bordered={true}\n              hover\n              condensed\n              striped\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    restaurant: state.restaurant,\n    order: state.order\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getRestaurantOrders: payload =>\n    dispatch(vendorActions.getRestaurantOrders(payload)),\n  changeStatus: payload => dispatch(vendorActions.changeStatus(payload)),\n  getBuyerOrders: payload => dispatch(vendorActions.getBuyerOrders(payload)),\n  getUser: payload => dispatch(userActions.getUser(payload)),\n  getRestaurant: payload => dispatch(vendorActions.getRestaurant(payload))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Order);\n"]},"metadata":{},"sourceType":"module"}